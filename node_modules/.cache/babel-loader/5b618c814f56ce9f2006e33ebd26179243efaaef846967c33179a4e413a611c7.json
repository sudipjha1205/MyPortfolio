{"ast":null,"code":"var _jsxFileName = \"/home/sudip/Portfolio/src/Components/Forms/SkillsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport './SkillsForm.css';\nimport skillsList from \"../../Static/Configurations/skillsList.conf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillsForm = () => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n\n  // Simulating fetching data (replace with your API call)\n  useEffect(() => {\n    // Fetch your data and format it into options array\n    const fetchData = async () => {\n      // Example data (replace with actual fetched data)\n      const fetchedData = [{\n        value: 'option1',\n        label: 'Option 1'\n      }, {\n        value: 'option2',\n        label: 'Option 2'\n      }, {\n        value: 'option3',\n        label: 'Option 3'\n      }\n      // Add more options as needed\n      ];\n      setOptions(fetchedData);\n    };\n    fetchData();\n  }, []);\n  const handleInputChange = newValue => {\n    // Implement your search logic here (if needed)\n    setInputValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar-container\",\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOption,\n      onChange: selected => setSelectedOption(selected),\n      options: options,\n      onInputChange: handleInputChange,\n      inputValue: inputValue,\n      placeholder: \"Skills...\",\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillsForm, \"DJDLkbYa+bGcl0C82K564kfPv3o=\");\n_c = SkillsForm;\nexport default SkillsForm;\nvar _c;\n$RefreshReg$(_c, \"SkillsForm\");","map":{"version":3,"names":["React","useState","useEffect","Select","skillsList","jsxDEV","_jsxDEV","SkillsForm","_s","options","setOptions","selectedOption","setSelectedOption","inputValue","setInputValue","fetchData","fetchedData","value","label","handleInputChange","newValue","className","children","onChange","selected","onInputChange","placeholder","isSearchable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sudip/Portfolio/src/Components/Forms/SkillsForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n\nimport './SkillsForm.css';\nimport skillsList from \"../../Static/Configurations/skillsList.conf\";\n\nconst SkillsForm = () => {\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n\n  // Simulating fetching data (replace with your API call)\n  useEffect(() => {\n    // Fetch your data and format it into options array\n    const fetchData = async () => {\n      // Example data (replace with actual fetched data)\n      const fetchedData = [\n        { value: 'option1', label: 'Option 1' },\n        { value: 'option2', label: 'Option 2' },\n        { value: 'option3', label: 'Option 3' },\n        // Add more options as needed\n      ];\n\n      setOptions(fetchedData);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleInputChange = (newValue) => {\n    // Implement your search logic here (if needed)\n    setInputValue(newValue);\n  };\n\n  return (\n    <div className=\"search-bar-container\">\n      <Select\n        value={selectedOption}\n        onChange={(selected) => setSelectedOption(selected)}\n        options={options}\n        onInputChange={handleInputChange}\n        inputValue={inputValue}\n        placeholder=\"Skills...\"\n        isSearchable\n      />\n    </div>\n  );\n};\n\nexport default SkillsForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAO,kBAAkB;AACzB,OAAOC,UAAU,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,WAAW,GAAG,CAClB;QAAEC,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAW,CAAC,EACvC;QAAED,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAW,CAAC,EACvC;QAAED,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAW;MACtC;MAAA,CACD;MAEDR,UAAU,CAACM,WAAW,CAAC;IACzB,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAIC,QAAQ,IAAK;IACtC;IACAN,aAAa,CAACM,QAAQ,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnChB,OAAA,CAACH,MAAM;MACLc,KAAK,EAAEN,cAAe;MACtBY,QAAQ,EAAGC,QAAQ,IAAKZ,iBAAiB,CAACY,QAAQ,CAAE;MACpDf,OAAO,EAAEA,OAAQ;MACjBgB,aAAa,EAAEN,iBAAkB;MACjCN,UAAU,EAAEA,UAAW;MACvBa,WAAW,EAAC,WAAW;MACvBC,YAAY;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAzCID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}